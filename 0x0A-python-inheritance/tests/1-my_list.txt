case 1: mixed data types

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append('a')
>>> my_list.append(3.14)
>>> my_list.append(True)
>>> my_list.print_sorted()
[1, 3.14, True, 'a']
>>>

-------------------------------------------

case 2: sorting strings

>>> my_list = MyList(['banana', 'apple', 'cherry', 'date'])
>>> my_list.print_sorted()
['apple', 'banana', 'cherry', 'date']
>>>

-------------------------------------------

case 3: sorting with custom key function

>>> my_list = MyList(['apple', 'banana', 'cherry', 'date'])
>>> my_list.print_sorted(key=lambda x: len(x))
['date', 'apple', 'banana', 'cherry']
>>>

-------------------------------------------

case 4: sorting with reverse order

>>> my_list = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5])
>>> my_list.print_sorted(reverse=True)
[9, 6, 5, 5, 5, 4, 3, 3, 2, 1, 1]
>>>

-------------------------------------------

case 5: sorting an already sorted list

>>> my_list = MyList([1, 2, 3, 4, 5])
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>>

-------------------------------------------

case 6: sorting a large list

>>> my_list = MyList(range(1000, 0, -1))
>>> my_list.print_sorted()
[1, 2, 3, 4, 5, ..., 997, 998, 999, 1000]
>>>

